import bpy
import socket
import threading
import math

server_ip = "127.0.0.1"
server_port = 12347
buffer_size = 1024

target_object_name = "Cube"
target_object = bpy.data.objects.get(target_object_name)

if not target_object:
    raise ValueError(f"Object '{target_object_name}' not found in Blender.")


last_position = [0.0, 0.0, 0.0]
hand_data_scaling_factor = 70  
smooth_factor = 0.1  
filter_factor = 0.2  


def low_pass_filter(new_value, previous_value, alpha):
    return previous_value + alpha * (new_value - previous_value)


def update_object_properties(data):
    global last_position
    try:
        
        wrist_data, finger_spread = data.split("|")
        x, y, z = map(float, wrist_data.split(","))

        
        print(f"Raw Data: X={x}, Y={y}, Z={z}")

        
        smooth_x = x * hand_data_scaling_factor
        smooth_y = y * hand_data_scaling_factor
        smooth_z = z * hand_data_scaling_factor

        
        smooth_x = low_pass_filter(smooth_x, last_position[0], filter_factor)
        smooth_y = low_pass_filter(smooth_y, last_position[1], filter_factor)
        smooth_z = low_pass_filter(smooth_z, last_position[2], filter_factor)

        
        target_object.location = (smooth_x, smooth_y, smooth_z)

        
        last_position = [smooth_x, smooth_y, smooth_z]

    except Exception as e:
        print(f"Error updating object properties: {e}")


def socket_listener():
    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as server_socket:
        server_socket.bind((server_ip, server_port))
        print(f"Listening on {server_ip}:{server_port}...")
        while True:
            try:
                data, _ = server_socket.recvfrom(buffer_size)
                update_object_properties(data.decode())
            except Exception as e:
                print(f"Socket error: {e}")
                break


listener_thread = threading.Thread(target=socket_listener, daemon=True)
listener_thread.start()

print("Blender script running. Move your hand to control the object!")
